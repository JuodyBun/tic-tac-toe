[{"C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\App.js":"1","C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\index.js":"2","C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\Components\\Login.js":"3","C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\Components\\Board.js":"4"},{"size":528,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":232,"mtime":1607900229738,"results":"7","hashOfConfig":"6"},{"size":1676,"mtime":1607900187746,"results":"8","hashOfConfig":"6"},{"size":5007,"mtime":1607902721039,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k1hk82",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18"},"C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\App.js",[],"C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\index.js",[],"C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\Components\\Login.js",[],"C:\\Users\\Bunhole\\Desktop\\Projects\\tic-tac-toe\\src\\Components\\Board.js",["19"],"import React from \"react\";\r\n\r\nclass Board extends React.Component {\r\n    generateTiles = () => {\r\n        let allTiles = [];\r\n        for (let i = 0; i < 9; i++) {\r\n            allTiles.push(\"tile not-played\");\r\n        }\r\n        return allTiles;\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        const { handleScore, endgame } = this.props;\r\n        let tile = event.target;\r\n        if (tile.classList.length === 2) {\r\n            this.play(tile);\r\n        }\r\n\r\n        let allTiles = document.getElementsByClassName(\"not-played\");\r\n        if (allTiles.length < 1) {\r\n            handleScore(\"ties\");\r\n            endgame(true);\r\n            this.reset();\r\n        }\r\n    };\r\n\r\n    play = (tile) => {\r\n        const { player1, player2, turn, handleScore, endgame } = this.props;\r\n        tile.classList.remove(\"not-played\");\r\n        if (player1) {\r\n            tile.innerHTML = \"X\";\r\n            turn(\"player1\", false, \"player2\", true);\r\n            if (this.diagonal(\"X\") || this.row(\"X\") || this.column(\"X\")) {\r\n                handleScore(\"player1\");\r\n                endgame(true);\r\n                this.reset();\r\n            }\r\n        }\r\n        if (player2) {\r\n            tile.innerHTML = \"O\";\r\n            turn(\"player2\", false, \"player1\", true);\r\n            if (this.diagonal(\"O\") || this.row(\"O\") || this.column(\"O\")) {\r\n                handleScore(\"player2\");\r\n                endgame(true);\r\n                this.reset();\r\n            }\r\n        }\r\n    };\r\n    \r\n    diagonal = (play) => {\r\n        let left = [\r\n            document.getElementById(\"tile0\").innerHTML,\r\n            document.getElementById(\"tile4\").innerHTML,\r\n            document.getElementById(\"tile8\").innerHTML,\r\n       ];\r\n       let right = [\r\n            document.getElementById(\"tile2\").innerHTML,\r\n            document.getElementById(\"tile4\").innerHTML,\r\n            document.getElementById(\"tile6\").innerHTML,\r\n       ];\r\n\r\n       if (left[0] === play && left[1] === play && left [2] === play) {\r\n           return true;\r\n       }\r\n       if (right[0] === play && right[1] === play && right[2] === play) {\r\n           return true;\r\n       }\r\n       return false;\r\n    };\r\n\r\n    row = (play) => {\r\n        let row1 = [\r\n            document.getElementById(\"tile0\").innerHTML,\r\n            document.getElementById(\"tile1\").innerHTML,\r\n            document.getElementById(\"tile2\").innerHTML,\r\n        ];\r\n        let row2 = [\r\n            document.getElementById(\"tile3\").innerHTML,\r\n            document.getElementById(\"tile4\").innerHTML,\r\n            document.getElementById(\"tile5\").innerHTML,\r\n        ];\r\n        let row3 = [\r\n            document.getElementById(\"tile6\").innerHTML,\r\n            document.getElementById(\"tile7\").innerHTML,\r\n            document.getElementById(\"tile8\").innerHTML,\r\n        ];\r\n\r\n        if (row1[0] === play && row1[1] === play && row1[2] === play) {\r\n            return true;    \r\n        }\r\n        if (row2[0] === play && row2[1] === play && row2[2] === play) {\r\n            return true;\r\n        }\r\n        if (row3[0] === play && row3[1] === play && row3[2] === play) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    column = (play) => {\r\n        let column1 = [\r\n            document.getElementById(\"tile0\").innerHTML,\r\n            document.getElementById(\"tile3\").innerHTML,\r\n            document.getElementById(\"tile6\").innerHTML,\r\n        ];\r\n        let column2 = [\r\n            document.getElementById(\"tile1\").innerHTML,\r\n            document.getElementById(\"tile4\").innerHTML,\r\n            document.getElementById(\"tile7\").innerHTML,\r\n        ];\r\n        let column3 = [\r\n            document.getElementById(\"tile2\").innerHTML,\r\n            document.getElementById(\"tile5\").innerHTML,\r\n            document.getElementById(\"tile8\").innerHTML,\r\n        ];\r\n        \r\n        if (column1[0] === play && column1[1] === play && column1[2] === play) {\r\n            return true;    \r\n        }\r\n        if (column2[0] === play && column2[1] === play && column2[2] === play) {\r\n            return true;\r\n        }\r\n        if (column3[0] === play && column3[1] === play && column3[2] === play) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };   \r\n\r\n    reset = () => {\r\n        let allTiles = document.getElementsByClassName(\"tile\");\r\n        for (let i = 0; i < allTiles.length; i++) {\r\n            allTiles[i].innerHTML = \"\";\r\n            allTiles[i].classList.add(\"not-played\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                {this.generateTiles().map((element, i) => {\r\n                    return (\r\n                        <div\r\n                            id={`tile${i}`}\r\n                            key={i}\r\n                            className={element}\r\n                            onClick={this.handleClick}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;",{"ruleId":"20","severity":1,"message":"21","line":62,"column":52,"nodeType":"22","messageId":"23","endLine":62,"endColumn":60,"fix":"24"},"no-whitespace-before-property","Unexpected whitespace before property 2.","MemberExpression","unexpectedWhitespace",{"range":"25","text":"26"},[1976,1977],""]